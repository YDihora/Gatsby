{"version":3,"file":"component---src-pages-using-typescript-tsx.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/pages/using-typescript.tsx","webpack://gatsby-starter-default/./src/components/header.js","webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/components/seo.js"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\r\nimport * as React from \"react\"\r\nimport { PageProps, Link, graphql } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\n\r\ntype DataProps = {\r\n  site: {\r\n    buildTime: string\r\n  }\r\n}\r\n\r\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({ data, path }) => (\r\n  <Layout>\r\n    <Seo title=\"Using TypeScript\" />\r\n    <h1>Gatsby supports TypeScript by default!</h1>\r\n    <p>\r\n      This means that you can create and write <em>.ts/.tsx</em> files for your\r\n      pages, components etc. Please note that the <em>gatsby-*.js</em> files\r\n      (like gatsby-node.js) currently don't support TypeScript yet.\r\n    </p>\r\n    <p>\r\n      For type checking you'll want to install <em>typescript</em> via npm and\r\n      run <em>tsc --init</em> to create a <em>tsconfig</em> file.\r\n    </p>\r\n    <p>\r\n      You're currently on the page \"{path}\" which was built on{\" \"}\r\n      {data.site.buildTime}.\r\n    </p>\r\n    <p>\r\n      To learn more, head over to our{\" \"}\r\n      <a href=\"https://www.gatsbyjs.com/docs/typescript/\">\r\n        documentation about TypeScript\r\n      </a>\r\n      .\r\n    </p>\r\n    <Link to=\"/\">Go back to the homepage</Link>\r\n  </Layout>\r\n)\r\n\r\nexport default UsingTypescript\r\n\r\nexport const query = graphql`\r\n  {\r\n    site {\r\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\r\n    }\r\n  }\r\n`\r\n","import * as React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { Link } from \"gatsby\"\r\n\r\nconst Header = ({ siteTitle }) => (\r\n  <header\r\n    style={{\r\n      background: `rebeccapurple`,\r\n      marginBottom: `1.45rem`,\r\n    }}\r\n  >\r\n    <div\r\n      style={{\r\n        margin: `0 auto`,\r\n        maxWidth: 960,\r\n        padding: `1.45rem 1.0875rem`,\r\n      }}\r\n    >\r\n      <h1 style={{ margin: 0 }}>\r\n        <Link\r\n          to=\"/\"\r\n          style={{\r\n            color: `white`,\r\n            textDecoration: `none`,\r\n          }}\r\n        >\r\n          {siteTitle}\r\n        </Link>\r\n      </h1>\r\n    </div>\r\n  </header>\r\n)\r\n\r\nHeader.propTypes = {\r\n  siteTitle: PropTypes.string,\r\n}\r\n\r\nHeader.defaultProps = {\r\n  siteTitle: ``,\r\n}\r\n\r\nexport default Header\r\n","/**\r\n * Layout component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.com/docs/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nimport Header from \"./header\"\r\nimport \"./layout.css\"\r\n\r\nconst Layout = ({ children }) => {\r\n  const data = useStaticQuery(graphql`\r\n    query SiteTitleQuery {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return (\r\n    <>\r\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\r\n      <div\r\n        style={{\r\n          margin: `0 auto`,\r\n          maxWidth: 960,\r\n          padding: `0 1.0875rem 1.45rem`,\r\n        }}\r\n      >\r\n        <main>{children}</main>\r\n        <footer\r\n          style={{\r\n            marginTop: `2rem`,\r\n          }}\r\n        >\r\n          Â© {new Date().getFullYear()}, Built with\r\n          {` `}\r\n          <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\r\n        </footer>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.com/docs/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { Helmet } from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction Seo({ description, lang, meta, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n  const defaultTitle = site.siteMetadata?.title\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : null}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata?.author || ``,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ].concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSeo.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  description: ``,\r\n}\r\n\r\nSeo.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Seo\r\n"],"names":["React","Link","Layout","Seo","UsingTypescript","data","path","site","buildTime","query","PropTypes","Header","siteTitle","background","marginBottom","margin","maxWidth","padding","color","textDecoration","propTypes","string","defaultProps","children","siteMetadata","title","marginTop","Date","getFullYear","node","isRequired","Helmet","description","lang","meta","metaDescription","defaultTitle","name","content","property","author","concat","arrayOf","object"],"sourceRoot":""}